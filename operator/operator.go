/*
Package operator implements logical, arithmetic, bitwise and comparison
operators as functions (like the Python operator module). Includes unary,
binary, and nary functions with overflow checked variants.

Example:

    package main
    
    import (
        "fmt"
        "tawesoft.co.uk/go/operator"
    )
    
    func foo(op func(int, int) int, a int, b int) int {
        return op(a, b)
    }
    
    func fooChecked(op func(int8, int8) (int8, error), a int8, b int8) (int8, error) {
        return op(a, b)
    }
    
    func main() {
        fmt.Println(foo(operator.Int.Binary.Add, 5, 3))
        fmt.Println(foo(operator.Int.Binary.Sub, 5, 3))
        
        var result, err = fooChecked(operator.Int8Checked.Binary.Add, 126, 2) // max int8 is 127!
        if err != nil {
            fmt.Printf("error: %v (expected!)\n", err)
        } else {
            fmt.Println(result)
        }
    }

For license information, documentation, source code, support, links, etc. please see
https://tawesoft.co.uk/go/operator

This module is part of https://tawesoft.co.uk/go
*/
package operator // import "tawesoft.co.uk/go/operator"

// SPDX-License-Identifier: MIT-0

// Code generated by (tawesoft.co.uk/go/) fluff.py: DO NOT EDIT.